{
    "openapi": "3.0.1",
    "info": {
      "title": "Mark Harrison Colors API",
      "description": "Colors API",
      "termsOfService": "https://github.com/markharrison/ColorsAPI/blob/master/LICENSE",
      "contact": {
        "name": "Mark Harrison",
        "url": "https://github.com/markharrison/ColorsAPI",
        "email": "mark.colorsapi@harrison.ws"
      },
      "license": {
        "name": "Use under MIT License",
        "url": "https://github.com/markharrison/ColorsAPI/blob/master/LICENSE"
      },
      "version": "v1"
    },
    "servers": [
      {
        "url": "https://colors-api.azurewebsites.net/"
      }
    ],
    "paths": {
      "/colors": {
        "get": {
          "tags": [
            "Colors"
          ],
          "summary": "Get colors",
          "description": "Returns all colors.",
          "operationId": "GetColors",
          "responses": {
            "200": {
              "description": "Success - returns list of colors",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ColorsItem"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ColorsItem"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ColorsItem"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Colors"
          ],
          "summary": "Update / create colors",
          "description": "Updates colors - creates color if it doesn't exist",
          "operationId": "UpdateColors",
          "requestBody": {
            "description": "Colors to update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Success - colors updated/created",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                }
              }
            },
            "422": {
              "description": "Unprocessable Entity",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Colors"
          ],
          "summary": "Delete colors",
          "description": "Deletes all colors.",
          "operationId": "DeletesColors",
          "responses": {
            "204": {
              "description": "Success - all colors deleted",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                }
              }
            }
          }
        }
      },
      "/colors/{colorId}": {
        "get": {
          "tags": [
            "Colors"
          ],
          "summary": "Get color by id",
          "description": "Returns color specified by {colorId} (must be between 1 and 1000).",
          "operationId": "GetColorById",
          "parameters": [
            {
              "name": "colorId",
              "in": "path",
              "description": "Id of Color to return",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success - returns color",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            },
            "422": {
              "description": "Unprocessable Entity",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Colors"
          ],
          "summary": "Update / create color by id",
          "description": "Updates color specified by {colorId} (must be between 1 and 1000);  use {colorId} = 0 to insert new color",
          "operationId": "UpdateColorById",
          "parameters": [
            {
              "name": "colorId",
              "in": "path",
              "description": "Id of Color to update",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "description": "Colors to update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColorsItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColorsItem"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ColorsItem"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Success - color created/updated",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                }
              }
            },
            "422": {
              "description": "Unprocessable Entity",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Colors"
          ],
          "summary": "Delete color by id",
          "description": "Deletes color specified by {colorId} (must be between 1 and 1000).",
          "operationId": "DeleteColorById",
          "parameters": [
            {
              "name": "colorId",
              "in": "path",
              "description": "Id of Color to delete",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Success - color deleted",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                }
              }
            },
            "422": {
              "description": "Unprocessable Entity",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/colors/findbyname": {
        "get": {
          "tags": [
            "Colors"
          ],
          "summary": "Get color by name",
          "description": "Returns color specified by {colorName} ",
          "operationId": "GetColorByName",
          "parameters": [
            {
              "name": "colorName",
              "in": "query",
              "description": "Name of Color to return",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success - returns color",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/colors/random": {
        "get": {
          "tags": [
            "Colors"
          ],
          "summary": "Get random color",
          "description": "Returns random color.",
          "operationId": "GetRandomColor",
          "responses": {
            "200": {
              "description": "Success - returns random color",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/colors/reset": {
        "post": {
          "tags": [
            "Colors"
          ],
          "summary": "Reset colors",
          "description": "Reset colors to default.",
          "operationId": "ResetColors",
          "responses": {
            "201": {
              "description": "Success - colors reset",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ColorsItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "ColorsItem": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "data": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ProblemDetails": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "nullable": true
            },
            "title": {
              "type": "string",
              "nullable": true
            },
            "status": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "detail": {
              "type": "string",
              "nullable": true
            },
            "instance": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": { }
        }
      }
    }
  }